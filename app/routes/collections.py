from flask import Blueprint, render_template, redirect, url_for, request, flash, jsonify, current_app
from flask_login import login_required, current_user
from app.models import db, Collection, Book

bp = Blueprint('collections', __name__)

# üìö –°–ø–∏—Å–æ–∫ –ø–æ–¥–±–æ—Ä–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@bp.route('/collections')
@login_required
def list_collections():
    collections = Collection.query.filter_by(user_id=current_user.id).all()
    return render_template('collections/index.html', collections=collections)

# üëÅ –ü—Ä–æ—Å–º–æ—Ç—Ä –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –ø–æ–¥–±–æ—Ä–∫–∏
@bp.route('/collection/<int:id>')
@login_required
def view_collection(id):
    collection = Collection.query.get_or_404(id)
    if collection.user_id != current_user.id:
        flash("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –ø–æ–¥–±–æ—Ä–∫–µ", "danger")
        return redirect(url_for('collections.list_collections'))
    return render_template('collections/view.html', collection=collection)

# ‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –ø–æ–¥–±–æ—Ä–∫–∏ (—á–µ—Ä–µ–∑ JavaScript)
@bp.route('/collection/add', methods=['POST'])
@login_required
def add_collection():
    name = request.form.get('name', '').strip()
    current_app.logger.info(f"üì• –ó–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥–±–æ—Ä–∫–∏: {name}")

    if not name:
        current_app.logger.warning("‚ùå –ü—É—Å—Ç–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ–¥–±–æ—Ä–∫–∏.")
        return jsonify({"error": "–ù–∞–∑–≤–∞–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º"}), 400

    try:
        new_collection = Collection(name=name, user_id=current_user.id)
        db.session.add(new_collection)
        db.session.commit()
        current_app.logger.info(f"‚úÖ –ü–æ–¥–±–æ—Ä–∫–∞ '{name}' –¥–æ–±–∞–≤–ª–µ–Ω–∞.")
        return jsonify({"message": "–ü–æ–¥–±–æ—Ä–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞"}), 200
    except Exception as e:
        db.session.rollback()
        current_app.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–¥–±–æ—Ä–∫–∏: {str(e)}")
        return jsonify({"error": "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏"}), 500

# üìö –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–∏–≥–∏ –≤ –ø–æ–¥–±–æ—Ä–∫—É (—á–µ—Ä–µ–∑ JavaScript)
@bp.route('/collection/<int:id>/add_book', methods=['POST'])
@login_required
def add_book_to_collection(id):
    collection = Collection.query.get_or_404(id)
    if collection.user_id != current_user.id:
        return jsonify({"error": "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞"}), 403

    book_id = request.form.get('book_id', '').strip()
    if not book_id.isdigit():
        return jsonify({"error": "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –∫–Ω–∏–≥–∏"}), 400

    book = Book.query.get_or_404(int(book_id))

    if book in collection.books:
        return jsonify({"message": "–ö–Ω–∏–≥–∞ —É–∂–µ –µ—Å—Ç—å –≤ –ø–æ–¥–±–æ—Ä–∫–µ"}), 200

    try:
        collection.books.append(book)
        db.session.commit()
        current_app.logger.info(f"‚úÖ –ö–Ω–∏–≥–∞ '{book.title}' –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –ø–æ–¥–±–æ—Ä–∫—É '{collection.name}'")
        return jsonify({"message": "–ö–Ω–∏–≥–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –ø–æ–¥–±–æ—Ä–∫—É"}), 200
    except Exception as e:
        db.session.rollback()
        current_app.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–Ω–∏–≥–∏: {str(e)}")
        return jsonify({"error": "–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–Ω–∏–≥–∏"}), 500
